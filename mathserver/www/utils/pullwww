#!/usr/bin/env python
"""
pullwww - pull sync the www bucket
* * * * *  /var/www/utils/pullwww mhmathadm-www /var/www >>/var/www/utils/pullwww.log 2>&1
"""

import sys,os,os.path,hashlib,json,socket,time
import boto.s3,boto.s3.connection
import boto.sqs

#-----------------------------------------------------------------------
def md5(s):
    """calc md5 for a strign"""
    m = hashlib.md5()
    m.update(s)
    return m.hexdigest()

#-----------------------------------------------------------------------
def dodirs(dstdir,keys):
    """process dirs"""
    dirs={}
    for k in keys:
        dirname=os.path.join(dstdir,os.path.dirname(k.name))
        dirs[dirname]=1
    for d in sorted(dirs.keys()):
        try:
            os.makedirs(d)
            ###os.chmod(0755,d)
        except OSError,e:
            if e.errno != 17:   # OSError: [Errno 17] File exists
                raise e

#-----------------------------------------------------------------------
def dofiles(dstdir,keys):
    """process files"""

    changed=[]
    for k in keys:
        fpath=os.path.join(dstdir,k.name)
        try:
            s3_md5=k.etag.strip('"')
            fs_md5='-'
            fs_md5=md5(file(fpath).read())
        except IOError,e:
            if e.errno != 2:   # OSError: [Errno 2] File not found
                raise e
        #print '   ',s3_md5,fs_md5,k.name,fpath
        if s3_md5 != fs_md5:
            fd=open(fpath,'w')
            k.get_file(fd)
            fd.close()
            changed.append(k.name)
    print 'synced:',changed

    if len(changed) > 0:
        _sqs=boto.sqs.connect_to_region('us-west-2')
        q=_sqs.get_queue('mathq')
        msg=boto.sqs.message.RawMessage()
        msg.set_body(json.dumps(['pulled',time.strftime('%Y/%m/%d %T'),socket.gethostname(),changed]))
        status=q.write(msg)

#-----------------------------------------------------------------------
def main():
    """the main thing"""
    bucket=sys.argv[1]
    dstdir=sys.argv[2]

    _s3=boto.s3.connection.S3Connection()
    bucket=_s3.get_bucket(bucket)
    keys=bucket.list()

    print 'top',time.time()
    hence=time.time()+50
    while time.time() < hence:
        print 'loop',time.time()
        sys.stdout.flush()
        dodirs(dstdir,keys)
        dofiles(dstdir,keys)
        time.sleep(5)

try:
    main()
except KeyboardInterrupt:
    pass
